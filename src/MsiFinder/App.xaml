<Application x:Class="MsiFinder.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:viewModel="clr-namespace:MsiFinder.ViewModel"
             xmlns:views="clr-namespace:MsiFinder.Views"
             xmlns:converters="clr-namespace:MsiFinder.Converters"
             StartupUri="Views/MainWindow.xaml">
    <Application.Resources>

        <viewModel:ViewModelLocator x:Key="Locator" />

        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

        <converters:InverseBooleanConverter x:Key="InverseBooleanConverter" />

        <ControlTemplate x:Key="ErrorTemplate" TargetType="{x:Type Control}">
            <AdornedElementPlaceholder x:Name="Placeholder">
                <Rectangle Name="Overlay" Fill="Red" IsHitTestVisible="False" Opacity="0" />
            </AdornedElementPlaceholder>
            <ControlTemplate.Triggers>
                <EventTrigger RoutedEvent="Loaded">
                    <BeginStoryboard Name="ValidationErrorStoryboard">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                             Storyboard.TargetName="Overlay"
                                             Duration="0:0:0.3" To="0.1" />
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style x:Key="ControlStyle" TargetType="Control">
            <Setter Property="Validation.ErrorTemplate" Value="{StaticResource ErrorTemplate}" />
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="True">
                    <Setter Property="ToolTip"
                            Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)/ErrorContent}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="PlainListBoxItemStyle" TargetType="ListBoxItem" BasedOn="{StaticResource ControlStyle}">
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <ContentPresenter />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="PlainListBoxStyle" TargetType="ListBox" BasedOn="{StaticResource ControlStyle}">
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="ItemContainerStyle" Value="{StaticResource PlainListBoxItemStyle}" />
            <Setter Property="ItemsPanel">
                <Setter.Value>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Horizontal" />
                    </ItemsPanelTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBox}">
                        <ItemsPresenter />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="LoadingTextBlockStyle" TargetType="TextBlock">
            <Style.Resources>
                <Storyboard x:Key="BusyAnimation">
                    <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                     From="1"
                                     To="0"
                                     RepeatBehavior="Forever"
                                     AutoReverse="True"
                                     Duration="0:0:1" />
                </Storyboard>
            </Style.Resources>
            <Style.Triggers>
                <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                    <BeginStoryboard Name="Pulse" Storyboard="{StaticResource BusyAnimation}" />
                </EventTrigger>
            </Style.Triggers>
        </Style>

    </Application.Resources>
</Application>